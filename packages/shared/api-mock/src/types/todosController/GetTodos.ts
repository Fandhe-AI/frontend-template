/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { CustomError } from "../CustomError.ts";
import type { Pagination } from "../Pagination.ts";
import type { Todo } from "../Todo.ts";

export const getTodosQueryParamsStatusEnum = {
	pending: "pending",
	completed: "completed",
	all: "all",
} as const;

export type GetTodosQueryParamsStatusEnum =
	(typeof getTodosQueryParamsStatusEnum)[keyof typeof getTodosQueryParamsStatusEnum];

export const getTodosQueryParamsPriorityEnum = {
	low: "low",
	medium: "medium",
	high: "high",
} as const;

export type GetTodosQueryParamsPriorityEnum =
	(typeof getTodosQueryParamsPriorityEnum)[keyof typeof getTodosQueryParamsPriorityEnum];

export const getTodosQueryParamsSortEnum = {
	created_at: "created_at",
	updated_at: "updated_at",
	due_date: "due_date",
	priority: "priority",
	title: "title",
} as const;

export type GetTodosQueryParamsSortEnum =
	(typeof getTodosQueryParamsSortEnum)[keyof typeof getTodosQueryParamsSortEnum];

export const getTodosQueryParamsOrderEnum = {
	asc: "asc",
	desc: "desc",
} as const;

export type GetTodosQueryParamsOrderEnum =
	(typeof getTodosQueryParamsOrderEnum)[keyof typeof getTodosQueryParamsOrderEnum];

export type GetTodosQueryParams = {
	/**
	 * @description Todo の完了状態でフィルタリング
	 * @default "all"
	 * @type string | undefined
	 */
	status?: GetTodosQueryParamsStatusEnum;
	/**
	 * @description カテゴリ ID でフィルタリング
	 * @type string | undefined
	 */
	category?: string;
	/**
	 * @description 優先度でフィルタリング
	 * @type string | undefined
	 */
	priority?: GetTodosQueryParamsPriorityEnum;
	/**
	 * @description タイトルや説明での検索
	 * @type string | undefined
	 */
	search?: string;
	/**
	 * @description ページ番号（1から開始）
	 * @minLength 1
	 * @default 1
	 * @type integer | undefined
	 */
	page?: number;
	/**
	 * @description 1ページあたりの件数
	 * @minLength 1
	 * @maxLength 100
	 * @default 20
	 * @type integer | undefined
	 */
	limit?: number;
	/**
	 * @description 並び替えフィールド
	 * @default "created_at"
	 * @type string | undefined
	 */
	sort?: GetTodosQueryParamsSortEnum;
	/**
	 * @description 並び替え順序
	 * @default "desc"
	 * @type string | undefined
	 */
	order?: GetTodosQueryParamsOrderEnum;
};

/**
 * @description Todo リストの取得に成功
 */
export type GetTodos200 = {
	/**
	 * @type array
	 */
	data: Todo[];
	/**
	 * @description ページネーション情報
	 * @type object
	 */
	pagination: Pagination;
};

/**
 * @description リクエストが不正です
 */
export type GetTodos400 = CustomError;

/**
 * @description 認証が必要です
 */
export type GetTodos401 = CustomError;

/**
 * @description サーバー内部エラー
 */
export type GetTodos500 = CustomError;

export type GetTodosQueryResponse = GetTodos200;

export type GetTodosQuery = {
	Response: GetTodos200;
	QueryParams: GetTodosQueryParams;
	Errors: GetTodos400 | GetTodos401 | GetTodos500;
};
