/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { ToZod } from "@kubb/plugin-zod/utils";
import { z } from "zod";
import type {
  PutTodosTodoid200,
  PutTodosTodoid400,
  PutTodosTodoid401,
  PutTodosTodoid404,
  PutTodosTodoid422,
  PutTodosTodoid500,
  PutTodosTodoidMutationRequest,
  PutTodosTodoidMutationResponse,
  PutTodosTodoidPathParams,
} from "../../types/todosController/PutTodosTodoid.ts";
import { customErrorSchema } from "../customErrorSchema.ts";
import { todoSchema } from "../todoSchema.ts";
import { updateTodoRequestSchema } from "../updateTodoRequestSchema.ts";

export const putTodosTodoidPathParamsSchema = z.object({
  todoId: z.string().describe("Todo の一意識別子"),
}) as unknown as ToZod<PutTodosTodoidPathParams>;

/**
 * @description Todo の更新に成功
 */
export const putTodosTodoid200Schema = z
  .lazy(() => todoSchema)
  .describe(
    "Todo アイテムを表現するオブジェクト",
  ) as unknown as ToZod<PutTodosTodoid200>;

/**
 * @description リクエストが不正です
 */
export const putTodosTodoid400Schema = z
  .lazy(() => customErrorSchema)
  .describe("エラー情報") as unknown as ToZod<PutTodosTodoid400>;

/**
 * @description 認証が必要です
 */
export const putTodosTodoid401Schema = z
  .lazy(() => customErrorSchema)
  .describe("エラー情報") as unknown as ToZod<PutTodosTodoid401>;

/**
 * @description リソースが見つかりません
 */
export const putTodosTodoid404Schema = z
  .lazy(() => customErrorSchema)
  .describe("エラー情報") as unknown as ToZod<PutTodosTodoid404>;

/**
 * @description バリデーションエラー
 */
export const putTodosTodoid422Schema = z
  .lazy(() => customErrorSchema)
  .describe("エラー情報") as unknown as ToZod<PutTodosTodoid422>;

/**
 * @description サーバー内部エラー
 */
export const putTodosTodoid500Schema = z
  .lazy(() => customErrorSchema)
  .describe("エラー情報") as unknown as ToZod<PutTodosTodoid500>;

export const putTodosTodoidMutationRequestSchema = z
  .lazy(() => updateTodoRequestSchema)
  .describe(
    "Todo 更新時のリクエストボディ（部分更新対応）",
  ) as unknown as ToZod<PutTodosTodoidMutationRequest>;

export const putTodosTodoidMutationResponseSchema = z.lazy(
  () => putTodosTodoid200Schema,
) as unknown as ToZod<PutTodosTodoidMutationResponse>;
