/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { ToZod } from "@kubb/plugin-zod/utils";
import { z } from "zod";
import type {
  DeleteTodosTodoid204,
  DeleteTodosTodoid401,
  DeleteTodosTodoid404,
  DeleteTodosTodoid500,
  DeleteTodosTodoidMutationResponse,
  DeleteTodosTodoidPathParams,
} from "../../types/todosController/DeleteTodosTodoid.ts";
import { customErrorSchema } from "../customErrorSchema.ts";

export const deleteTodosTodoidPathParamsSchema = z.object({
  todoId: z.string().describe("Todo の一意識別子"),
}) as unknown as ToZod<DeleteTodosTodoidPathParams>;

/**
 * @description Todo の削除に成功
 */
export const deleteTodosTodoid204Schema =
  z.unknown() as unknown as ToZod<DeleteTodosTodoid204>;

/**
 * @description 認証が必要です
 */
export const deleteTodosTodoid401Schema = z
  .lazy(() => customErrorSchema)
  .describe("エラー情報") as unknown as ToZod<DeleteTodosTodoid401>;

/**
 * @description リソースが見つかりません
 */
export const deleteTodosTodoid404Schema = z
  .lazy(() => customErrorSchema)
  .describe("エラー情報") as unknown as ToZod<DeleteTodosTodoid404>;

/**
 * @description サーバー内部エラー
 */
export const deleteTodosTodoid500Schema = z
  .lazy(() => customErrorSchema)
  .describe("エラー情報") as unknown as ToZod<DeleteTodosTodoid500>;

export const deleteTodosTodoidMutationResponseSchema = z.lazy(
  () => deleteTodosTodoid204Schema,
) as unknown as ToZod<DeleteTodosTodoidMutationResponse>;
