/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { ToZod } from "@kubb/plugin-zod/utils";
import { z } from "zod";
import type {
  PatchTodosTodoidToggle200,
  PatchTodosTodoidToggle401,
  PatchTodosTodoidToggle404,
  PatchTodosTodoidToggle500,
  PatchTodosTodoidToggleMutationResponse,
  PatchTodosTodoidTogglePathParams,
} from "../../types/todosController/PatchTodosTodoidToggle.ts";
import { customErrorSchema } from "../customErrorSchema.ts";
import { todoSchema } from "../todoSchema.ts";

export const patchTodosTodoidTogglePathParamsSchema = z.object({
  todoId: z.string().describe("Todo の一意識別子"),
}) as unknown as ToZod<PatchTodosTodoidTogglePathParams>;

/**
 * @description 完了状態の切り替えに成功
 */
export const patchTodosTodoidToggle200Schema = z
  .lazy(() => todoSchema)
  .describe(
    "Todo アイテムを表現するオブジェクト",
  ) as unknown as ToZod<PatchTodosTodoidToggle200>;

/**
 * @description 認証が必要です
 */
export const patchTodosTodoidToggle401Schema = z
  .lazy(() => customErrorSchema)
  .describe("エラー情報") as unknown as ToZod<PatchTodosTodoidToggle401>;

/**
 * @description リソースが見つかりません
 */
export const patchTodosTodoidToggle404Schema = z
  .lazy(() => customErrorSchema)
  .describe("エラー情報") as unknown as ToZod<PatchTodosTodoidToggle404>;

/**
 * @description サーバー内部エラー
 */
export const patchTodosTodoidToggle500Schema = z
  .lazy(() => customErrorSchema)
  .describe("エラー情報") as unknown as ToZod<PatchTodosTodoidToggle500>;

export const patchTodosTodoidToggleMutationResponseSchema = z.lazy(
  () => patchTodosTodoidToggle200Schema,
) as unknown as ToZod<PatchTodosTodoidToggleMutationResponse>;
